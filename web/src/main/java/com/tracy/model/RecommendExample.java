package com.tracy.model;

import com.ximalaya.live.model.Limit;
import com.ximalaya.live.model.Shard;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RecommendExample {
    /**
     * This field was generated by Apache iBATIS Ibator.
     * This field corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS Ibator.
     * This field corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by Apache iBATIS Ibator.
     * This field corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS Ibator.
     * This field corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected Limit limit;

    /**
     * This field was generated by Apache iBATIS Ibator.
     * This field corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected Shard shard;

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public RecommendExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected RecommendExample(RecommendExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.distinct = example.distinct;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public Limit getLimit() {
        return this.limit;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS Ibator.
     * This method corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    public Shard getShard() {
        return this.shard;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("RecommendExample [")
        .append("orderByClause=").append(orderByClause)
        .append("distinct=").append(distinct)
        .append("oredCriteria=").append(oredCriteria)
        .append("limit=").append(limit)
        .append("shard=").append(shard)
        .append("]");
        return builder.toString();
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table tb_recommend
     *
     * @ibatorgenerated Sun Apr 03 21:33:32 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected GeneratedCriteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFromIdIsNull() {
            addCriterion("from_id is null");
            return (Criteria) this;
        }

        public Criteria andFromIdIsNotNull() {
            addCriterion("from_id is not null");
            return (Criteria) this;
        }

        public Criteria andFromIdEqualTo(Integer value) {
            addCriterion("from_id =", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdNotEqualTo(Integer value) {
            addCriterion("from_id <>", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdGreaterThan(Integer value) {
            addCriterion("from_id >", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("from_id >=", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdLessThan(Integer value) {
            addCriterion("from_id <", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdLessThanOrEqualTo(Integer value) {
            addCriterion("from_id <=", value, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdIn(List<Integer> values) {
            addCriterion("from_id in", values, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdNotIn(List<Integer> values) {
            addCriterion("from_id not in", values, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdBetween(Integer value1, Integer value2) {
            addCriterion("from_id between", value1, value2, "fromId");
            return (Criteria) this;
        }

        public Criteria andFromIdNotBetween(Integer value1, Integer value2) {
            addCriterion("from_id not between", value1, value2, "fromId");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("time is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("time is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Long value) {
            addCriterion("time =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Long value) {
            addCriterion("time <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Long value) {
            addCriterion("time >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("time >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Long value) {
            addCriterion("time <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Long value) {
            addCriterion("time <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Long> values) {
            addCriterion("time in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Long> values) {
            addCriterion("time not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Long value1, Long value2) {
            addCriterion("time between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Long value1, Long value2) {
            addCriterion("time not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdIsNull() {
            addCriterion("from_open_id is null");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdIsNotNull() {
            addCriterion("from_open_id is not null");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdEqualTo(String value) {
            addCriterion("from_open_id =", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdNotEqualTo(String value) {
            addCriterion("from_open_id <>", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdGreaterThan(String value) {
            addCriterion("from_open_id >", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdGreaterThanOrEqualTo(String value) {
            addCriterion("from_open_id >=", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdLessThan(String value) {
            addCriterion("from_open_id <", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdLessThanOrEqualTo(String value) {
            addCriterion("from_open_id <=", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdLike(String value) {
            addCriterion("from_open_id like", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdNotLike(String value) {
            addCriterion("from_open_id not like", value, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdIn(List<String> values) {
            addCriterion("from_open_id in", values, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdNotIn(List<String> values) {
            addCriterion("from_open_id not in", values, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdBetween(String value1, String value2) {
            addCriterion("from_open_id between", value1, value2, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andFromOpenIdNotBetween(String value1, String value2) {
            addCriterion("from_open_id not between", value1, value2, "fromOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdIsNull() {
            addCriterion("to_open_id is null");
            return (Criteria) this;
        }

        public Criteria andToOpenIdIsNotNull() {
            addCriterion("to_open_id is not null");
            return (Criteria) this;
        }

        public Criteria andToOpenIdEqualTo(String value) {
            addCriterion("to_open_id =", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdNotEqualTo(String value) {
            addCriterion("to_open_id <>", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdGreaterThan(String value) {
            addCriterion("to_open_id >", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdGreaterThanOrEqualTo(String value) {
            addCriterion("to_open_id >=", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdLessThan(String value) {
            addCriterion("to_open_id <", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdLessThanOrEqualTo(String value) {
            addCriterion("to_open_id <=", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdLike(String value) {
            addCriterion("to_open_id like", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdNotLike(String value) {
            addCriterion("to_open_id not like", value, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdIn(List<String> values) {
            addCriterion("to_open_id in", values, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdNotIn(List<String> values) {
            addCriterion("to_open_id not in", values, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdBetween(String value1, String value2) {
            addCriterion("to_open_id between", value1, value2, "toOpenId");
            return (Criteria) this;
        }

        public Criteria andToOpenIdNotBetween(String value1, String value2) {
            addCriterion("to_open_id not between", value1, value2, "toOpenId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by Apache iBATIS Ibator.
     * This class corresponds to the database table tb_recommend
     *
     * @ibatorgenerated do_not_delete_during_merge Sun Apr 03 21:33:32 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}